openapi: 3.0.0
info:
  title: HabitPilot API
  description: 習慣管理と自己肯定感向上のためのAPI
  version: 1.0.0
  contact:
    name: HabitPilot Support
    email: support@habitpilot.com

servers:
  - url: http://localhost:3001/api
    description: Development server
  - url: https://api.habitpilot.com/api
    description: Production server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
          format: email
        createdAt:
          type: string
          format: date-time

    Task:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        importance:
          type: integer
          minimum: 1
          maximum: 3
        completed:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    DailyScore:
      type: object
      properties:
        date:
          type: string
          format: date
        score:
          type: number
          format: float
        completionRate:
          type: number
          format: float
        tasksCompleted:
          type: integer
        tasksTotal:
          type: integer
        breakdown:
          type: object
          properties:
            baseScore:
              type: number
            streakBonus:
              type: number
            consistencyBonus:
              type: number

    Error:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
            details:
              type: object

paths:
  /auth/register:
    post:
      tags:
        - Authentication
      summary: ユーザー登録
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 8
      responses:
        '201':
          description: 登録成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  email:
                    type: string
                  token:
                    type: string
        '400':
          description: 不正なリクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: メールアドレスが既に存在

  /auth/login:
    post:
      tags:
        - Authentication
      summary: ユーザーログイン
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: ログイン成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  email:
                    type: string
                  token:
                    type: string
        '401':
          description: 認証失敗

  /tasks:
    get:
      tags:
        - Tasks
      summary: タスク一覧取得
      security:
        - bearerAuth: []
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [active, completed, all]
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items:
                      $ref: '#/components/schemas/Task'
                  total:
                    type: integer

    post:
      tags:
        - Tasks
      summary: タスク作成
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
              properties:
                title:
                  type: string
                importance:
                  type: integer
                  default: 1
      responses:
        '201':
          description: 作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'

  /tasks/{id}:
    put:
      tags:
        - Tasks
      summary: タスク更新
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                importance:
                  type: integer
                completed:
                  type: boolean
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: タスクが見つからない

    delete:
      tags:
        - Tasks
      summary: タスク削除
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: 削除成功
        '404':
          description: タスクが見つからない

  /scores/daily:
    get:
      tags:
        - Scores
      summary: 日次スコア取得
      security:
        - bearerAuth: []
      parameters:
        - name: date
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DailyScore'

  /scores/weekly:
    get:
      tags:
        - Scores
      summary: 週次統計取得
      security:
        - bearerAuth: []
      parameters:
        - name: startDate
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  weekStart:
                    type: string
                    format: date
                  weekEnd:
                    type: string
                    format: date
                  averageScore:
                    type: number
                  currentStreak:
                    type: integer
                  longestStreak:
                    type: integer
                  totalTasksCompleted:
                    type: integer
                  dailyScores:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                          format: date
                        score:
                          type: number

  /scores/self-esteem:
    get:
      tags:
        - Scores
      summary: 自己肯定感スコア取得
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  currentScore:
                    type: number
                  trend:
                    type: string
                    enum: [improving, stable, declining]
                  factors:
                    type: object
                    properties:
                      consistency:
                        type: number
                      achievement:
                        type: number
                      growth:
                        type: number
                  recommendations:
                    type: array
                    items:
                      type: string